source('~/GitHub/simpleConjunction/cluster/run_model.R', echo=TRUE)
prior <- c(
prior("normal(0, 3)", class = "b"),
set_prior("normal(1.5, 1)", class = "b", dpar = "bs", lb = 0),
set_prior("normal(0.2, 0.05)", class = "b", dpar = "ndt", lb = 0),
set_prior("normal(0.5, 0.2)", class = "b", dpar = "bias", lb = 0, ub = 1),
set_prior("normal(0, 0.05"), class = "sd", dpart = "ndt"
)
prior <- c(
prior("normal(0, 3)", class = "b"),
set_prior("normal(1.5, 1)", class = "b", dpar = "bs", lb = 0),
set_prior("normal(0.2, 0.05)", class = "b", dpar = "ndt", lb = 0),
set_prior("normal(0.5, 0.2)", class = "b", dpar = "bias", lb = 0),
set_prior("normal(0, 0.05"), class = "sd", dpart = "ndt"
)
prior <- c(
prior("normal(0, 3)", class = "b"),
set_prior("normal(1.5, 1)", class = "b", dpar = "bs"),
set_prior("normal(0.2, 0.05)", class = "b", dpar = "ndt", lb = 0),
set_prior("normal(0.5, 0.2)", class = "b", dpar = "bias", lb = 0),
set_prior("normal(0, 0.05"), class = "sd", dpart = "ndt"
)
prior <- c(
prior("normal(0, 3)", class = "b"),
set_prior("normal(1.5, 1)", class = "b", dpar = "bs"),
set_prior("normal(0.2, 0.05)", class = "b", dpar = "ndt"),
set_prior("normal(0.5, 0.2)", class = "b", dpar = "bias"),
set_prior("normal(0, 0.05"), class = "sd", dpart = "ndt"
)
prior <- c(
prior("normal(0, 3)", class = "b"),
prior("normal(1.5, 1)", class = "b", dpar = "bs"),
prior("normal(0.2, 0.05)", class = "b", dpar = "ndt"),
prior("normal(0.5, 0.2)", class = "b", dpar = "bias"),
prior("normal(0, 0.05"), class = "sd", dpart = "ndt"
)
prior <- c(
set_prior("normal(0, 3)", class = "b"),
set_prior("normal(1.5, 1)", class = "b", dpar = "bs"),
set_prior("normal(0.2, 0.05)", class = "b", dpar = "ndt"),
set_prior("normal(0.5, 0.2)", class = "b", dpar = "bias"),
set_prior("normal(0, 0.05"), class = "sd", dpart = "ndt"
)
library(tidyverse)
library(brms)
library(tidybayes)
library(patchwork)
options(mc.cores = 4)
d <- read_csv("data_for_model.csv",
col_types = "fffffdfi")
formula <- bf(rt | dec(response) ~
# the first part is the linear predictor for drift rate
0 + targ:trial  + targ:trial:difficulty  +
(0 + targ:trial + targ:trial:difficulty|p|observer),
# bs: boundary separation
bs ~ 0 + trial + (0 + trial|p|observer),
# ndt: non-decision time
ndt ~ 0 + trial + (1|p|observer),
# bias: starting bias for TA or TP
bias ~ 0 + trial + (0 + trial|p|observer))
prior <- c(
set_prior("normal(0, 3)", class = "b"),
set_prior("normal(1.5, 1)", class = "b", dpar = "bs"),
set_prior("normal(0.2, 0.05)", class = "b", dpar = "ndt"),
set_prior("normal(0.5, 0.2)", class = "b", dpar = "bias"),
set_prior("normal(0, 0.05"), class = "sd", dpart = "ndt"
)
set_prior("normal(0, 0.05)", class = "sd", dpart = "ndt")
set_prior("normal(0, 0.05)", class = "sd", dpar = "ndt")
prior <- c(
set_prior("normal(0, 3)", class = "b"),
set_prior("normal(1.5, 1)", class = "b", dpar = "bs"),
set_prior("normal(0.2, 0.05)", class = "b", dpar = "ndt"),
set_prior("normal(0.5, 0.2)", class = "b", dpar = "bias"),
set_prior("normal(0, 0.05)", class = "sd", dpar = "ndt"))
make_stancode(formula,
family = wiener(link_bs = "identity",
link_ndt = "identity",
link_bias = "identity"),
data = d,
prior = prior)
tmp_dat <- make_standata(formula,
family = wiener(link_bs = "identity",
link_ndt = "identity",
link_bias = "identity"),
data = d, prior = prior)
str(tmp_dat, 1, give.attr = FALSE)
initfun <- function() {
list(
b = rnorm(tmp_dat$K),
b_bs = runif(tmp_dat$K_bs, 1, 2),
b_ndt = runif(tmp_dat$K_ndt, 0.01, 0.2),
b_bias = rnorm(tmp_dat$K_bias, 0.5, 0.1),
sd_1 = runif(tmp_dat$M_1, 0.5, 1),
z_1 = matrix(rnorm(tmp_dat$M_1*tmp_dat$N_1, 0, 0.01),
tmp_dat$M_1, tmp_dat$N_1),
L_1 = diag(tmp_dat$M_1)
)
}
fit_wiener <- brm(formula,
data = d,
family = wiener(link_bs = "identity",
link_ndt = "identity",
link_bias = "identity"),
prior = prior,
inits = initfun,
iter = 2000,
chains = 4, cores = 4,
control = list(max_treedepth = 15))
summary(d)
