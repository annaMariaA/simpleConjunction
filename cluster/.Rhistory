#!/usr/bin/Rscript3.6.3
library(tidyverse)
library(brms)
options(mc.cores = 4)
d <- read_csv("data_for_model.csv",
col_types = "fffffdfi") %>%
mutate(diff = if_else(difficulty == "easy", 1, 0),
diff = if_else(difficulty == "mid", 2, diff),
diff = if_else(difficulty == "hard", 3, diff),
difficulty = diff) %>%
select(-diff)
formula <- bf(rt | dec(response) ~
# the first part is the linear predictor for drift rate
0 + targ:trial  + targ:trial:difficulty  +
(0 + targ:trial  + targ:trial:difficulty|p|observer),
# bs: boundary separation
bs ~ 0 + trial + trial:difficulty +
(0 + trial + trial:difficulty|p|observer),
# ndt: non-decision time
ndt ~ 1 + (1|p|observer),
# bias: starting bias for TA or TP
bias ~ 0 + trial + trial:difficulty +
(0 + trial + trial:difficulty|p|observer))
get_prior(formula, d,
family = wiener(link_bs = "log",
link_bias = "logit",
link_ndt = "log"))
b_slopes
b_slopes <- paste("type", unique(d$trial), ":difficulty", sep = "")
b_slopes
b_slopes <- paste("trial", unique(d$trial), ":difficulty", sep = "")
prior <- c(
set_prior("normal(0, 1)", class = "b"), # rate intercepts
set_prior("normal(0, 0.1)", class = "b", coef = rate_slopes), # rate slopes
set_prior("normal(1, 1)", class = "b", dpar = "bs"), #boundary sep
set_prior("normal(0, 0.1)", class = "b", dpar = "bs", coef = b_slopes),
set_prior("normal(0.0, 0.5)", class = "b", dpar = "bias"),
set_prior("normal(0.0, 0.1)", class = "b", dpar = "bias", coef = b_slopes),
set_prior("normal(-5, 0.5)", class = "Intercept", dpar = "ndt"),
set_prior("normal(0, 0.01)", class = "sd", dpar = "ndt"))
source('~/GitHub/simpleConjunction/cluster/run_model.R', echo=TRUE)
source('~/GitHub/simpleConjunction/cluster/run_model.R', echo=TRUE)
source('~/GitHub/simpleConjunction/cluster/run_model.R', echo=TRUE)
