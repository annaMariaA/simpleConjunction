#!/usr/bin/Rscript3.6.3
library(tidyverse)
library(brms)
# options(mc.cores = 1)
n_chains <- 1
n_iter <- 1000
d <- read_csv("data_for_model.csv")  %>%
mutate(obs = as.factor(obs),
nD = nD/max(nD))
d
d <- read_csv("data_for_model.csv")  %>%
mutate(obs = as.factor(obs),
nD = nD/max(nD)) %>%
filter(nD == 1)
d <- read_csv("data_for_model.csv")
d
summary(d)
d <- read_csv("data_for_model.csv")  %>%
filter(nD == 15) %>%
mutate(obs = as.factor(obs))
d
d <- read_csv("data_for_model.csv")
d
d <- read_csv("data_for_model.csv")  %>%
filter(nD == 15) %>%
mutate(obs = as.factor(obs))
#########################################
#### FULL model
#########################################
formula <- bf(rt | dec(response) ~
# the first part is the linear predictor for drift rate
0 + targ:type +
(0 + targ:type|p|obs),
# bs: boundary separation
bs ~ 0 + type + (0 + type|p|obs),
# ndt: non-decision time
ndt ~ 1 + (1|p|obs),
# bias: starting bias for TA or TP
bias ~ 0 + type + (0 + type|p|obs))
prior <- c(
set_prior("normal(0, 1)", class = "b"), # rate intercepts
set_prior("normal(0, 0.1)", class = "b", coef = rate_slopes), # rate slopes
set_prior("normal(1, 1)", class = "b", dpar = "bs"), #boundary sep
set_prior("normal(0, 0.1)", class = "b", dpar = "bs", coef = b_slopes),
set_prior("normal(0.0, 0.5)", class = "b", dpar = "bias"),
set_prior("normal(0.0, 0.1)", class = "b", dpar = "bias", coef = b_slopes),
set_prior("normal(-5, 0.5)", class = "Intercept", dpar = "ndt"),
set_prior("normal(0, 0.01)", class = "sd", dpar = "ndt"))
tmp_dat <- make_standata(formula,
family = wiener(link_bs = "log",
link_bias = "logit",
link_ndt = "log"),
data = d, prior = prior,
chains = n_chains)
prior <- c(
set_prior("normal(0, 1)", class = "b"), # rate intercepts
#set_prior("normal(0, 0.1)", class = "b", coef = rate_slopes), # rate slopes
set_prior("normal(1, 1)", class = "b", dpar = "bs"), #boundary sep
# set_prior("normal(0, 0.1)", class = "b", dpar = "bs", coef = b_slopes),
set_prior("normal(0.0, 0.5)", class = "b", dpar = "bias"),
#set_prior("normal(0.0, 0.1)", class = "b", dpar = "bias", coef = b_slopes),
set_prior("normal(-5, 0.5)", class = "Intercept", dpar = "ndt"),
set_prior("normal(0, 0.01)", class = "sd", dpar = "ndt"))
tmp_dat <- make_standata(formula,
family = wiener(link_bs = "log",
link_bias = "logit",
link_ndt = "log"),
data = d, prior = prior,
chains = n_chains)
str(tmp_dat, 1, give.attr = FALSE)
initfun <- function() {
list(
b = c(rnorm(tmp_dat$K/2, 0, 1), rnorm(tmp_dat$K/2, 0, 0.1)),
b_bs = c(runif(tmp_dat$K_bs/2, 0.5, 1), runif(tmp_dat$K_bs/2, 0, 0.1)),
Intercept_ndt = -10,
b_bias = rnorm(tmp_dat$K_bias, 0.0, 0.1),
sd_1 = runif(tmp_dat$M_1, 0.5, 1),
z_1 = matrix(rnorm(tmp_dat$M_1*tmp_dat$N_1, 0, 0.01),
tmp_dat$M_1, tmp_dat$N_1),
L_1 = diag(tmp_dat$M_1)
)
}
fit_wiener <- brm(formula,
data = d,
family = wiener(link_bs = "log",
link_bias = "logit",
link_ndt = "log"),
prior = prior,
inits = initfun,
iter = n_iter,
chains = 1, cores = 1,
control = list(max_treedepth = 15, adapt_delta = 0.9))
