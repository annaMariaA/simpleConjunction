read_csv("../pilot_data/pilot_data.csv")
library(tidyverse)
read_csv("../pilot_data/pilot_data.csv")
library(tidyverse)
library(ggthemes)
library(brms)
library(tidybayes)
options(digits = 2, mc.cores = 10)
knitr::opts_chunk$set(echo = TRUE)
d %>% group_by(observer, data_from, trial, targ, difficulty) %>%
summarise(accuracy = mean(accuracy))
d <- read_csv("../pilot_data/pilot_data.csv", col_types = my_cols) %>%
glimpse()
my_cols <- cols(
observer = col_character(),
data_from = col_character(),
trial = col_character(),
difficulty = col_character(),
targ = col_character(),
rt = col_double(),
accuracy = col_double()
)
d <- read_csv("../pilot_data/pilot_data.csv", col_types = my_cols) %>%
glimpse()
d %>% group_by(observer, data_from, trial, targ, difficulty) %>%
summarise(accuracy = mean(accuracy))
d %>% group_by(observer, data_from) %>%
summarise(accuracy = mean(accuracy), .groups = "drop")
d %>% group_by(observer, data_from) %>%
summarise(accuracy = mean(accuracy), .groups = "drop") %>%
ggplot(aes(x = observer, y = accuracy, fill = data_from)) +
geom_col()
summary(d)
unique(d"observer")
unique(d$observer)
library(tidyverse)
library(ggthemes)
library(brms)
library(tidybayes)
options(digits = 2, mc.cores = 10)
knitr::opts_chunk$set(echo = TRUE)
d %>% group_by(observer, data_from) %>%
summarise(accuracy = mean(accuracy), .groups = "drop") %>%
ggplot(aes(x = observer, y = accuracy, fill = data_from)) +
geom_col() +
theme(legend.position = "bottom") +
scale_fill_viridis_d()
d %>% fitler(accuracy == 1) %>%
group_by(observer, data_from, trial, targ, difficulty) %>%
summarise(med_rt = median(rt))
d %>% filter(accuracy == 1) %>%
group_by(observer, data_from, trial, targ, difficulty) %>%
summarise(med_rt = median(rt))
d %>% filter(accuracy == 1) %>%
group_by(observer, data_from, trial, targ, difficulty) %>%
summarise(med_rt = median(rt))
library(tidyverse)
library(ggthemes)
library(brms)
library(tidybayes)
options(digits = 2, mc.cores = 10)
knitr::opts_chunk$set(echo = TRUE)
my_cols <- cols(
observer = col_character(),
data_from = col_character(),
trial = col_character(),
difficulty = col_character(),
targ = col_character(),
rt = col_double(),
accuracy = col_double()
)
d <- read_csv("../pilot_data/pilot_data.csv", col_types = my_cols) %>%
glimpse()
d %>% group_by(observer, data_from) %>%
summarise(accuracy = mean(accuracy), .groups = "drop") %>%
ggplot(aes(x = observer, y = accuracy, fill = data_from)) +
geom_col() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ggthemes::scale_fill_pander()
d <- filter(d, observer != "obs3")
d %>% filter(accuracy == 1) %>%
group_by(observer, data_from, trial, targ, difficulty) %>%
summarise(med_rt = median(rt))
d <- read_csv("../pilot_data/pilot_data.csv", col_types = my_cols) %>%
glimpse() %>%
mutate(difficulty = as_factor(difficulty),
difficulty = fct_recode(difficulty, easy, mid, hard))
d <- read_csv("../pilot_data/pilot_data.csv", col_types = my_cols) %>%
glimpse() %>%
mutate(difficulty = as_factor(difficulty),
difficulty = fct_recode(difficulty, "easy", "mid", "hard"))
d <- read_csv("../pilot_data/pilot_data.csv", col_types = my_cols) %>%
glimpse() %>%
mutate(difficulty = as_factor(difficulty),
difficulty = fct_reorder(difficulty, easy, mid, hard))
d <- read_csv("../pilot_data/pilot_data.csv", col_types = my_cols) %>%
glimpse() %>%
mutate(difficulty = as_factor(difficulty),
difficulty = fct_relevel(difficulty, easy, mid, hard))
d <- read_csv("../pilot_data/pilot_data.csv", col_types = my_cols) %>%
glimpse() %>%
mutate(difficulty = as_factor(difficulty),
difficulty = fct_relevel(difficulty, "easy", "mid", "hard"))
d %>% filter(accuracy == 1) %>%
group_by(observer, data_from, trial, targ, difficulty) %>%
summarise(med_rt = median(rt), .groups = "drop") %>%
mutate(difficulty = as.numeric(difficulty)) %>%
ggplot(aes(x = difficulty, y = med_rt, colour = data_from)) +
geom_jitter(height = 0)
d %>% filter(accuracy == 1) %>%
group_by(observer, data_from, trial, targ, difficulty) %>%
summarise(med_rt = median(rt), .groups = "drop") %>%
mutate(difficulty = as.numeric(difficulty)) %>%
ggplot(aes(x = difficulty, y = med_rt, colour = data_from)) +
geom_jitter(height = 0) +
facet_grid(targ~trial) +
ggthemes::scale_color_pander()
p
data.frame(p  = 7, y = p+3)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
library(tidyverse)
p <- seq(0, 1, 0.01)
prior <- dnorm(p, 0.5 , 0.1)
plot(p, prior, col = "blue")
plot(p, prior, col = "blue")
prior2 <- dnorm(p, 0.5 , 0.21)
points(p, prior2, col = "purple")
dbimon(d$p, 0.5, 0.2)
dbinoM(d$p, 0.5, 0.2)
dbinom(d$p, 0.5, 0.2)
d <- data.frame(p = seq(0, 1, 0.01))
dbinom(d$p, 0.5, 0.2)
d$prior <- dnorm(d$p, 0.5, 0.2)
summary(d)
d
with(d, plot(p, prior))
d$l1 =  dbinom(1, 1, p)
plot(d$p, d$prior, col = "purple")
points(d$p, d$l1, col = "red")
plot(d$p, d$prior, col = "purple")
points(d$p, d$l1, col = "red")
plot(d$p, d$prior, col = "purple")
points(d$p, d$l1, col = "red")
d$post1 = prior * l1
d$l1 =  dbinom(1, 1, p)
d$post1 = prior * l1
d$post1 = d1$post1/sum(d1$post1))
d$post1 = d1$post1/sum(d1$post1)
d$post1 = d$post1/sum(d$post1)
d
d$post1 = d$post1/sum(d$post1)
d$post1/sum(d$post1)
d$post1
d$post1 = prior * l1
d$post1 = prior * d$l1
d$post1 = d$post1/sum(d$post1)
d
d$post1 = prior * d$l1
sum(d$post1)
d$post1 = length(d$post1) * d$post1/sum(d$post1)
plot(d$p, d$prior, col = "purple")
points(d$p, d$l1, col = "red")
points(d$p, d$post1, col = "green")
points(d$p, d$post1, col = "darkgreen")
plot(d$p, d$post1, col = "darkgreen")
points(d$p, d$prior, col = "purple")
points(d$p, d$l1, col = "red")
d$post1 = prior * d$l1
d$post1 = length(d$post1) * d$post1/sum(d$post1)
d
plot(d$p, d$post1, col = "darkgreen")
length(d$post1)
sum(d$post1)
d$post1 = prior * d$l1
sum(d$post1)
sum(d$prior)
d$post1 = prior * d$l1
d$post1 = d$post1/sum(d$post1)
plot(d$p, d$post1, col = "darkgreen")
d$l1
sum(d$prior)
d$post1 = prior * d$l1
d$post1 = length(d$p) * d$post1/sum(d$post1)
plot(d$p, d$post1, col = "darkgreen")
plot(d$p, d$post1, col = "darkgreen")
points(d$p, d$prior, col = "purple")
points(d$p, d$l1, col = "red")
d$post1 = d$prior * d$l1
d$post1 = length(d$p) * d$post1/sum(d$post1)
plot(d$p, d$post1, col = "darkgreen")
points(d$p, d$prior, col = "purple")
plot(d$p, d$post1, col = "darkgreen")
points(d$p, d$prior, col = "purple")
points(d$p, d$l1, col = "red")
d <- data.frame(p = seq(0, 1, 0.01))
p$prior <- dnorm(p, 0.5, 0.2)
d <- data.frame(p = seq(0, 1, 0.01))
d$prior <- dnorm(p, 0.5, 0.2)
d <- data.frame(p = seq(0, 1, 0.01))
d$prior <- dnorm(p, 0.5, 0.2)
d <- data.frame(p = seq(0, 1, 0.01))
d$prior <- dnorm(d$p, 0.5, 0.2)
d$lik <- dbinom(5, 7, d$p)
d$post <- d$prior * d$lik
d$post <- length(d$post) * d$post / sum(d$post)
plot(d$p, d$post)
points(d$p, d$prior)
d$p[which(d$post == max(d$post))]
5/7
d <- data.frame(p = seq(0, 1, 0.01))
d$prior <- dunif(d$p, 0, 1)
d$lik <- dbinom(5, 7, d$p)
d$post <- d$prior * d$lik
d$post <- length(d$post) * d$post / sum(d$post)
d$p[which(d$post == max(d$post))]
max(d$post)
which(d$post == max(d$post))
d$p[which(d$post == max(d$post))]
d <- data.frame(p = seq(0, 1, 0.01))
d$prior <- dnorm(d$p, 0.5, 0.2)
d$lik <- dbinom(5, 7, d$p)
d$post <- d$prior * d$lik
d$post <- length(d$post) * d$post / sum(d$post)
d$p[which(d$post == max(d$post))]
101^2
plot(d$p, d$post, col = "purple")
lines(d$p, dnorm(d$p, 0.62, 0.15))
lines(d$p, dnorm(d$p, 0.6, 0.15))
lines(d$p, dnorm(d$p, 0.6, 0.12))
lines(d$p, dnorm(d$p, 0.6, 0.14))
plot(d$p, d$post, col = "purple")
lines(d$p, dnorm(d$p, 0.61, 0.14))
library(rethinking)
d
sample(d$p, prob=d$post, 10000)
sample(d$p, prob=d$post, 1000)
sample(d$p, prob=d$post, size=1000)
sample(d$p, prob=d$post, size=1000, replace = TRUE)
mean(sample(d$p, prob=d$post, size=1000, replace = TRUE))
std(sample(d$p, prob=d$post, size=1000, replace = TRUE))
sd(sample(d$p, prob=d$post, size=1000, replace = TRUE))
plot(d$p, d$post, col = "purple")
lines(d$p, dnorm(d$p, 0.6053, 0.12579))
library(tidyverse)
library(ggthemes)
library(brms)
library(tidybayes)
options(digits = 2, mc.cores = 10)
knitr::opts_chunk$set(echo = TRUE)
my_cols <- cols(
observer = col_character(),
data_from = col_character(),
trial = col_character(),
difficulty = col_character(),
targ = col_character(),
rt = col_double(),
accuracy = col_double()
)
d <- read_csv("../pilot_data/pilot_data.csv", col_types = my_cols) %>%
glimpse() %>%
mutate(difficulty = as_factor(difficulty),
difficulty = fct_relevel(difficulty, "easy", "mid", "hard"))
d %>% group_by(observer, data_from) %>%
summarise(accuracy = mean(accuracy), .groups = "drop") %>%
ggplot(aes(x = observer, y = accuracy, fill = data_from)) +
geom_col() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ggthemes::scale_fill_pander()
d <- filter(d, observer != "obs3")
d %>% filter(accuracy == 1) %>%
group_by(observer, data_from, trial, targ, difficulty) %>%
summarise(med_rt = median(rt), .groups = "drop") %>%
mutate(difficulty = as.numeric(difficulty)) %>%
ggplot(aes(x = difficulty, y = med_rt, colour = data_from)) +
geom_jitter(height = 0) +
facet_grid(targ~trial) +
ggthemes::scale_color_pander()
d %>% group_by(observer) %>%
summarise(min_rt = min(rt), .groups = "drop") %>%
ggplot(aes(x = min_rt)) + geom_histogram(bins = 20, colour = "black") +
geom_vline(xintercept = 0.250, linetype = 2) +
ggtitle("min RT per observer")
d %>% group_by(observer) %>%
summarise(max_rt = max(rt), .groups = "drop") %>%
ggplot(aes(x = max_rt)) + geom_histogram(bins = 20, colour = "black") +
geom_vline(xintercept = 250, linetype = 2) +
ggtitle("max RT per observer") +
scale_x_log10()
ggplot(d, aes(x = rt)) + geom_histogram(bins = 50) +
scale_x_log10() +
geom_vline(xintercept = c(0.250, 250), linetype = 2) +
ggtitle("all RTs")
d %>%
summarise(percent_below = 100*mean(rt<0.250),
percent_above = 100*mean(rt>250),
percent_removed = percent_below + percent_above) %>%
knitr::kable()
d <- filter(d, rt>0.250, rt<250)
d$response <- NA
d$response[which(d$targ=="present" & d$accuracy==1)] = 1
d$response[which(d$targ=="present" & d$accuracy==0)] = 0
d$response[which(d$targ=="absent" & d$accuracy==1)] = 0
d$response[which(d$targ=="absent" & d$accuracy==0)] = 1
write_csv(d, "../cluster/data_for_model.csv")
